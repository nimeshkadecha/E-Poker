// Generated by view binder compiler. Do not edit!
package com.nimeshkadecha.e_poker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.nimeshkadecha.e_poker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final TextInputEditText contactNumber;

  @NonNull
  public final TextInputEditText email;

  @NonNull
  public final TextInputEditText gst;

  @NonNull
  public final TextView head;

  @NonNull
  public final TextInputEditText password;

  @NonNull
  public final TextInputEditText rName;

  @NonNull
  public final Button register;

  @NonNull
  public final TextInputLayout textInputLayout4;

  @NonNull
  public final TextInputLayout textInputLayoutEmail;

  @NonNull
  public final TextInputLayout textInputLayoutGSTNumber;

  @NonNull
  public final TextInputLayout textInputLayoutName;

  @NonNull
  public final TextInputLayout textInputLayoutPassword;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout2, @NonNull TextInputEditText contactNumber,
      @NonNull TextInputEditText email, @NonNull TextInputEditText gst, @NonNull TextView head,
      @NonNull TextInputEditText password, @NonNull TextInputEditText rName,
      @NonNull Button register, @NonNull TextInputLayout textInputLayout4,
      @NonNull TextInputLayout textInputLayoutEmail,
      @NonNull TextInputLayout textInputLayoutGSTNumber,
      @NonNull TextInputLayout textInputLayoutName,
      @NonNull TextInputLayout textInputLayoutPassword) {
    this.rootView = rootView;
    this.constraintLayout2 = constraintLayout2;
    this.contactNumber = contactNumber;
    this.email = email;
    this.gst = gst;
    this.head = head;
    this.password = password;
    this.rName = rName;
    this.register = register;
    this.textInputLayout4 = textInputLayout4;
    this.textInputLayoutEmail = textInputLayoutEmail;
    this.textInputLayoutGSTNumber = textInputLayoutGSTNumber;
    this.textInputLayoutName = textInputLayoutName;
    this.textInputLayoutPassword = textInputLayoutPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      id = R.id.contactNumber;
      TextInputEditText contactNumber = ViewBindings.findChildViewById(rootView, id);
      if (contactNumber == null) {
        break missingId;
      }

      id = R.id.email;
      TextInputEditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.gst;
      TextInputEditText gst = ViewBindings.findChildViewById(rootView, id);
      if (gst == null) {
        break missingId;
      }

      id = R.id.head;
      TextView head = ViewBindings.findChildViewById(rootView, id);
      if (head == null) {
        break missingId;
      }

      id = R.id.password;
      TextInputEditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.rName;
      TextInputEditText rName = ViewBindings.findChildViewById(rootView, id);
      if (rName == null) {
        break missingId;
      }

      id = R.id.register;
      Button register = ViewBindings.findChildViewById(rootView, id);
      if (register == null) {
        break missingId;
      }

      id = R.id.textInputLayout4;
      TextInputLayout textInputLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout4 == null) {
        break missingId;
      }

      id = R.id.textInputLayoutEmail;
      TextInputLayout textInputLayoutEmail = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutEmail == null) {
        break missingId;
      }

      id = R.id.textInputLayoutGST_Number;
      TextInputLayout textInputLayoutGSTNumber = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutGSTNumber == null) {
        break missingId;
      }

      id = R.id.textInputLayoutName;
      TextInputLayout textInputLayoutName = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutName == null) {
        break missingId;
      }

      id = R.id.textInputLayoutPassword;
      TextInputLayout textInputLayoutPassword = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutPassword == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, constraintLayout2,
          contactNumber, email, gst, head, password, rName, register, textInputLayout4,
          textInputLayoutEmail, textInputLayoutGSTNumber, textInputLayoutName,
          textInputLayoutPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

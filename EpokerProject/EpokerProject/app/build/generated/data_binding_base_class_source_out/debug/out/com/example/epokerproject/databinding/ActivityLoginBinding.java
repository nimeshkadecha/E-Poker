// Generated by view binder compiler. Do not edit!
package com.example.epokerproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.epokerproject.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final TextView textsigninforgotpassword;

  @NonNull
  public final TextInputEditText tieEmail;

  @NonNull
  public final TextInputEditText tiePassword;

  @NonNull
  public final TextInputLayout tilEmail;

  @NonNull
  public final TextInputLayout tilPassword;

  @NonNull
  public final TextView txtOr;

  @NonNull
  public final TextView txtRegister;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull Button btnLogin,
      @NonNull TextView textsigninforgotpassword, @NonNull TextInputEditText tieEmail,
      @NonNull TextInputEditText tiePassword, @NonNull TextInputLayout tilEmail,
      @NonNull TextInputLayout tilPassword, @NonNull TextView txtOr,
      @NonNull TextView txtRegister) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.textsigninforgotpassword = textsigninforgotpassword;
    this.tieEmail = tieEmail;
    this.tiePassword = tiePassword;
    this.tilEmail = tilEmail;
    this.tilPassword = tilPassword;
    this.txtOr = txtOr;
    this.txtRegister = txtRegister;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.textsigninforgotpassword;
      TextView textsigninforgotpassword = ViewBindings.findChildViewById(rootView, id);
      if (textsigninforgotpassword == null) {
        break missingId;
      }

      id = R.id.tieEmail;
      TextInputEditText tieEmail = ViewBindings.findChildViewById(rootView, id);
      if (tieEmail == null) {
        break missingId;
      }

      id = R.id.tiePassword;
      TextInputEditText tiePassword = ViewBindings.findChildViewById(rootView, id);
      if (tiePassword == null) {
        break missingId;
      }

      id = R.id.tilEmail;
      TextInputLayout tilEmail = ViewBindings.findChildViewById(rootView, id);
      if (tilEmail == null) {
        break missingId;
      }

      id = R.id.tilPassword;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      id = R.id.txtOr;
      TextView txtOr = ViewBindings.findChildViewById(rootView, id);
      if (txtOr == null) {
        break missingId;
      }

      id = R.id.txtRegister;
      TextView txtRegister = ViewBindings.findChildViewById(rootView, id);
      if (txtRegister == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, btnLogin, textsigninforgotpassword,
          tieEmail, tiePassword, tilEmail, tilPassword, txtOr, txtRegister);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.epokerproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.epokerproject.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSignup;

  @NonNull
  public final TextInputEditText tieEmail;

  @NonNull
  public final TextInputEditText tieLicence;

  @NonNull
  public final TextInputEditText tieMobile;

  @NonNull
  public final TextInputEditText tiePassword;

  @NonNull
  public final TextInputEditText tieUser;

  @NonNull
  public final TextInputLayout tilEmail;

  @NonNull
  public final TextInputLayout tilLicence;

  @NonNull
  public final TextInputLayout tilMobile;

  @NonNull
  public final TextInputLayout tilPassword;

  @NonNull
  public final TextInputLayout tilUser;

  private ActivityRegisterBinding(@NonNull LinearLayout rootView, @NonNull Button btnSignup,
      @NonNull TextInputEditText tieEmail, @NonNull TextInputEditText tieLicence,
      @NonNull TextInputEditText tieMobile, @NonNull TextInputEditText tiePassword,
      @NonNull TextInputEditText tieUser, @NonNull TextInputLayout tilEmail,
      @NonNull TextInputLayout tilLicence, @NonNull TextInputLayout tilMobile,
      @NonNull TextInputLayout tilPassword, @NonNull TextInputLayout tilUser) {
    this.rootView = rootView;
    this.btnSignup = btnSignup;
    this.tieEmail = tieEmail;
    this.tieLicence = tieLicence;
    this.tieMobile = tieMobile;
    this.tiePassword = tiePassword;
    this.tieUser = tieUser;
    this.tilEmail = tilEmail;
    this.tilLicence = tilLicence;
    this.tilMobile = tilMobile;
    this.tilPassword = tilPassword;
    this.tilUser = tilUser;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSignup;
      Button btnSignup = ViewBindings.findChildViewById(rootView, id);
      if (btnSignup == null) {
        break missingId;
      }

      id = R.id.tieEmail;
      TextInputEditText tieEmail = ViewBindings.findChildViewById(rootView, id);
      if (tieEmail == null) {
        break missingId;
      }

      id = R.id.tieLicence;
      TextInputEditText tieLicence = ViewBindings.findChildViewById(rootView, id);
      if (tieLicence == null) {
        break missingId;
      }

      id = R.id.tieMobile;
      TextInputEditText tieMobile = ViewBindings.findChildViewById(rootView, id);
      if (tieMobile == null) {
        break missingId;
      }

      id = R.id.tiePassword;
      TextInputEditText tiePassword = ViewBindings.findChildViewById(rootView, id);
      if (tiePassword == null) {
        break missingId;
      }

      id = R.id.tieUser;
      TextInputEditText tieUser = ViewBindings.findChildViewById(rootView, id);
      if (tieUser == null) {
        break missingId;
      }

      id = R.id.tilEmail;
      TextInputLayout tilEmail = ViewBindings.findChildViewById(rootView, id);
      if (tilEmail == null) {
        break missingId;
      }

      id = R.id.tilLicence;
      TextInputLayout tilLicence = ViewBindings.findChildViewById(rootView, id);
      if (tilLicence == null) {
        break missingId;
      }

      id = R.id.tilMobile;
      TextInputLayout tilMobile = ViewBindings.findChildViewById(rootView, id);
      if (tilMobile == null) {
        break missingId;
      }

      id = R.id.tilPassword;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      id = R.id.tilUser;
      TextInputLayout tilUser = ViewBindings.findChildViewById(rootView, id);
      if (tilUser == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((LinearLayout) rootView, btnSignup, tieEmail, tieLicence,
          tieMobile, tiePassword, tieUser, tilEmail, tilLicence, tilMobile, tilPassword, tilUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
